{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import * as jwt from 'jsonwebtoken';\r\n\r\nexport class OAuth2 {\r\n    publicKey!: string;\r\n    privateKey!: string;\r\n\r\n    constructor(publicKey: string, privateKey?: string) {\r\n        if (!privateKey) {\r\n            privateKey = publicKey;\r\n        } \r\n\r\n        this.publicKey = publicKey;\r\n        this.privateKey = privateKey;\r\n    }\r\n\r\n    async generateAccessToken(payload: {}, options: {}): Promise<string> {\r\n        try {\r\n            const token = await new Promise<string>((resolve, reject) => {\r\n                jwt.sign(payload, this.privateKey, options, (err, token) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        resolve(token as string);\r\n                    }\r\n                });\r\n            });\r\n\r\n            return token;\r\n        } catch (err) {\r\n            throw new Error(\"Failed to generate access token.\");\r\n        }\r\n    }\r\n\r\n    async generateRefreshToken(payload: {}, options: {}): Promise<string> {\r\n        try {\r\n            const token = await new Promise<string>((resolve, reject) => {\r\n                jwt.sign(payload, this.privateKey, options, (err, token) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        resolve(token as string);\r\n                    }\r\n                });\r\n            });\r\n\r\n            return token;\r\n        } catch (err) {\r\n            throw new Error(\"Failed to generate refresh token.\");\r\n        }\r\n    }\r\n\r\n    async validateToken(token: string): Promise<boolean> {\r\n        try {\r\n            const payload = await new Promise((resolve, reject) => {\r\n                jwt.verify(token, this.publicKey, (err, payload) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        resolve(payload);\r\n                    }\r\n                });\r\n            });\r\n\r\n            return payload ? true : false;\r\n        } catch (err) {\r\n            throw new Error('Failed to validate token.');\r\n        }\r\n    }\r\n\r\n    async getPayload<T>(token: string): Promise<T> {\r\n        try {\r\n            return JSON.parse(Buffer.from(token.split('.')[1], 'base64').toString());\r\n        } catch (err) {\r\n            throw new Error(\"Failed to get payload.\");\r\n        }\r\n    }\r\n\r\n    parseToken(token: string): {} | null {\r\n        return jwt.decode(token);\r\n    }\r\n}"],"names":["jwt"],"mappings":"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"}